(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{325:function(t,s,a){"use strict";a.r(s);var n=a(10),v=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("运算符（operator）成为"),s("code",[t._v("操作符")]),t._v("是用于实现赋值，比较和执行算数运算等功能的符号")]),t._v(" "),s("p",[t._v("js中常用的运算符有")]),t._v(" "),s("ul",[s("li",[t._v("算数运算符")]),t._v(" "),s("li",[t._v("递增和递减运算符")]),t._v(" "),s("li",[t._v("逻辑运算符")]),t._v(" "),s("li",[t._v("赋值运算符")])]),t._v(" "),s("br")]),t._v(" "),s("h2",{attrs:{id:"算数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("加")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",[t._v("减号")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("乘")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("除")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("%")]),t._v(" "),s("td",[t._v("取余数（取模）")]),t._v(" "),s("td")])])]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取余")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浮点数 算数运算里面会有问题")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0.6000000000000001")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.09")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"递增和递减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#递增和递减运算符"}},[t._v("#")]),t._v(" 递增和递减运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("如果需要反复给数字变量添加或减去1 可以使用"),s("code",[t._v("递增(++)")]),t._v("和"),s("code",[t._v("递减(--)")]),t._v("运算符来完成")]),t._v(" "),s("p",[t._v("在javascript"),s("code",[t._v("中递减（++）")]),t._v("和"),s("code",[t._v("递减（--）")]),t._v("既可以放在变量前面也可以放在变量后面。放在变量前面时，我们可以称为"),s("code",[t._v("前置递增（递减）")]),t._v("运算符,放在变量后面时我们称为后"),s("code",[t._v("置递增（递减）运算符")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("递增递减运算符必须和变量配合使用")])])]),t._v(" "),s("h3",{attrs:{id:"前置运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置运算符"}},[t._v("#")]),t._v(" 前置运算符")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 想要一个变量自己加1  num =num +1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前置递增运算符 ++ 写在变量的前面")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先加1 后返回值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("p  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("blockquote",[s("h3",{attrs:{id:"后置运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后置运算符"}},[t._v("#")]),t._v(" 后置运算符")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先加1 后返回值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("p  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sm  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前置自增和后置自增如果单独使用 效果是一样的")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后置口诀 先返回原值后自加  ")]),t._v("\n")])])])])]),t._v(" "),s("blockquote",[s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("前置递增和后置递增运算符可以代码的简写 让变量的值+ 1 比以前写更简单")]),t._v(" "),s("li",[t._v("单独使用是 运行结果相同")]),t._v(" "),s("li",[t._v("与其他代码联用时， 执行结果会不同")]),t._v(" "),s("li",[t._v("后置： 先原计算，后自加（先人后已）")]),t._v(" "),s("li",[t._v("前置：先自加，后运算（先已后人）")]),t._v(" "),s("li",[t._v("开发时，大多使用后置递增（减） 并且代码独占一行 ： num++； num--;")])])])]),t._v(" "),s("h2",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("概念：比较预算符（关系运算符）是两个数据进行比较时候所使用的运算符，比较运算后，会返回一个布尔值（false/true）作为比较运算的结果。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符名称")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("案例")]),t._v(" "),s("th",[t._v("结果")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("小于号")]),t._v(" "),s("td",[t._v("1<2")]),t._v(" "),s("td",[t._v("true")])]),t._v(" "),s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("大于号")]),t._v(" "),s("td",[t._v("1>2")]),t._v(" "),s("td",[t._v("false")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("大于等于号")]),t._v(" "),s("td",[t._v("2>=2")]),t._v(" "),s("td",[t._v("true")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("小于等于号")]),t._v(" "),s("td",[t._v("3<=2")]),t._v(" "),s("td",[t._v("false")])]),t._v(" "),s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("判等号（会转型）")]),t._v(" "),s("td",[t._v("37==37")]),t._v(" "),s("td",[t._v("true")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",[t._v("不等号")]),t._v(" "),s("td",[t._v("37!=37")]),t._v(" "),s("td",[t._v("false")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("===")]),t._v(" "),s("code",[t._v("!==")])]),t._v(" "),s("td",[t._v("全等 要求值和数据类型都一致")]),t._v(" "),s("td",[t._v("37 ==='37'")]),t._v(" "),s("td",[t._v("false")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("符号")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("用法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("赋值")]),t._v(" "),s("td",[t._v("把右边给左边")])]),t._v(" "),s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("判断")]),t._v(" "),s("td",[t._v("判断两边的值是否相等（注意此时有隐式转换）")])]),t._v(" "),s("tr",[s("td",[t._v("===")]),t._v(" "),s("td",[t._v("全等")]),t._v(" "),s("td",[t._v("判断两边的值和数据类型是否完全相同")])])])])]),t._v(" "),s("h2",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("概念：逻辑运算符是用来进行布尔值运算的运算符，其返回值也是布尔值，后面开发中经常用于多个条件的判断")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("逻辑运算符")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("与    and")]),t._v(" "),s("td",[t._v("true&& false")])]),t._v(" "),s("tr",[s("td",[t._v("|")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("或     or")])]),t._v(" "),s("tr",[s("td",[t._v("!")]),t._v(" "),s("td",[t._v("非    not")]),t._v(" "),s("td",[t._v("!true")])])])]),t._v(" "),s("h4",{attrs:{id:"短路运算-逻辑中断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#短路运算-逻辑中断"}},[t._v("#")]),t._v(" 短路运算（逻辑中断）")]),t._v(" "),s("p",[t._v("原理: 当有多个表达式（值）时，左边的表达式值可以确定结果时 就不在继续运算右边的表达式的值：")]),t._v(" "),s("p",[s("code",[t._v("逻辑与")])]),t._v(" "),s("ul",[s("li",[t._v("语法： 表达式1&&表达式2")]),t._v(" "),s("li",[t._v("如果第一个表达式的值为真，则返回表达式2")]),t._v(" "),s("li",[t._v("如果第一个表达式的值为假，则返回表达式1")])]),t._v(" "),s("p",[s("code",[t._v("逻辑或")])]),t._v(" "),s("ul",[s("li",[t._v("语法:表达式1&&表达式2")]),t._v(" "),s("li",[t._v("如果第一个表达式的值为真 则返回表达式1")]),t._v(" "),s("li",[t._v("如果第一个表达式的值为假 则返回表达式2")])])]),t._v(" "),s("h3",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("概念：用来把数据赋值给变量的运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("赋值运算符")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("直接赋值")]),t._v(" "),s("td",[t._v("var usrName='值';")])]),t._v(" "),s("tr",[s("td",[t._v("+=   -=")]),t._v(" "),s("td",[t._v("加  减   一个数后再赋值")]),t._v(" "),s("td",[t._v("var age =10; age+=5 //15")])]),t._v(" "),s("tr",[s("td",[t._v("*= /= %=")]),t._v(" "),s("td",[t._v("乘 除  取模 后在赋值")]),t._v(" "),s("td",[t._v("var age=2 ; age*=5;  //10")])])])])]),t._v(" "),s("h2",{attrs:{id:"运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("优先级")]),t._v(" "),s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("顺序")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("小括号")]),t._v(" "),s("td",[t._v("（）")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("一元运算符")]),t._v(" "),s("td",[t._v("++   --  ！")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("算数运算符")]),t._v(" "),s("td",[t._v("先  *   /  后  + -")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("关系运算符")]),t._v(" "),s("td",[t._v("> >= < <=")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("相等运算符")]),t._v(" "),s("td",[s("code",[t._v("==")]),t._v(" "),s("code",[t._v("!=")]),t._v(" "),s("code",[t._v("===")]),t._v(" "),s("code",[t._v("!==")])])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("逻辑运算符")]),t._v(" "),s("td",[t._v("先&& 后|")])]),t._v(" "),s("tr",[s("td",[t._v("7")]),t._v(" "),s("td",[t._v("赋值运算符")]),t._v(" "),s("td",[t._v("=")])]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("逗号运算符")]),t._v(" "),s("td",[t._v("，")])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);