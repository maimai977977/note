(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{337:function(e,o,r){"use strict";r.r(o);var v=r(10),s=Object(v.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"_2-3如何使用promise"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-3如何使用promise"}},[e._v("#")]),e._v(" 2.3如何使用Promise")]),e._v(" "),o("h2",{attrs:{id:"_2-3-1api"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1api"}},[e._v("#")]),e._v(" 2.3.1API")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("Promise构造函数：Promise（excutor）{}")]),e._v(" "),o("ol",[o("li",[e._v("executor函数：执行器(resolve,reject)=>{}")]),e._v(" "),o("li",[e._v("resolve函数:内部定义成功时我们调用的函数value =>{}")]),e._v(" "),o("li",[e._v("reject函数：内部定义失败时我们调用的函数reason =>{}")])]),e._v(" "),o("p",[o("strong",[e._v("说明")]),e._v(" executor会在Promise内部立即同步调用，异步操作在执行器中执行")])]),e._v(" "),o("li",[o("p",[e._v("Promise.prototype.then方法：(onResolved,onRejected)=>{}")]),e._v(" "),o("ol",[o("li",[e._v("onResolved函数:成功的回调函数 (value)=>{}")]),e._v(" "),o("li",[e._v("onRejected函数：失败的回调函数(reason) =>{}")])]),e._v(" "),o("p",[o("strong",[e._v("说明")]),e._v("指定用于得到成功value的成功回调和用于得到失败reason的失败回调，返回一个新的promise对象")])]),e._v(" "),o("li",[o("p",[e._v("Promise.prototypr.catch方法：(onRejected)=>{}")]),e._v(" "),o("ol",[o("li",[e._v("onRejected函数：失败的回调函数(reason)=>{}")])])]),e._v(" "),o("li",[o("p",[e._v("Promise.resolve方法(value)=>{}")]),e._v(" "),o("ol",[o("li",[e._v("value:成功的数据或promise对象")])]),e._v(" "),o("p",[o("strong",[e._v("说明")]),e._v("返回一个成功/失败的promise对象")])]),e._v(" "),o("li",[o("p",[e._v("Promise.reject方法(reason) =>{}")]),e._v(" "),o("ol",[o("li",[e._v("reason:失败的方法")])]),e._v(" "),o("p",[o("strong",[e._v("说明")]),e._v("返回一个失败的promise对象")])]),e._v(" "),o("li",[o("p",[e._v("Promise.all方法：(promises)=>{}")]),e._v(" "),o("ol",[o("li",[e._v("promise：包含n个promise的数组")])]),e._v(" "),o("p",[o("strong",[e._v("说明")]),e._v("返回一个新的promise，只有所有的promise都成功才成功，只要一个失败就直接失败")])]),e._v(" "),o("li",[o("p",[e._v("Promise.race方法：(promise)=>{}")]),e._v(" "),o("ol",[o("li",[e._v("promises:包含n个promise的数组")])]),e._v(" "),o("p",[o("strong",[e._v("说明")]),e._v("返回一个新的promise，第一个完成promise的结果状态就是最终的结果状态")])])]),e._v(" "),o("p",[e._v("​")])])}),[],!1,null,null,null);o.default=s.exports}}]);