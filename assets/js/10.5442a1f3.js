(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{279:function(t,a,s){t.exports=s.p+"assets/img/git_.c33d9eae.png"},310:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"在windows-中下载并安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在windows-中下载并安装git"}},[t._v("#")]),t._v(" 在Windows 中下载并安装Git")]),t._v(" "),a("p",[t._v("在开始使用Git管理项目的版本之前，需要将它安装到计算机上。可以使用浏览器访问如下的网址，根据自己的操作系统，选择下载对应的Git安装包:\n"),a("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("git"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"配置用户信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置用户信息"}},[t._v("#")]),t._v(" 配置用户信息")]),t._v(" "),a("p",[t._v("安装完Git之后，要做的第一件事就是设置自己的用户名和邮件地址。因为通过Git对项目进行版本管理的时候，Git需要使用这些基本信息，来记录是谁对项目进行了操作:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mai"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9.qq.com"')]),t._v("\n")])])]),a("p",[t._v("注意:如果使用了--global选项，那么该命令只需要运行一次，即可永久生效。")]),t._v(" "),a("h2",{attrs:{id:"检查配置信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查配置信息"}},[t._v("#")]),t._v(" 检查配置信息")]),t._v(" "),a("p",[t._v("除了使用记事本查看全局的配置信息之外，还可以运行如下的终端命令，快速的查看Git的全局配置信息:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有的全局配置项")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看指定的全局配置项")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email\n")])])]),a("h2",{attrs:{id:"获取帮助信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取帮助信息"}},[t._v("#")]),t._v(" 获取帮助信息")]),t._v(" "),a("p",[t._v("可以使用git help "),a("code",[t._v("<verb>")]),t._v("命令，无需联网即可在浏览器中打开帮助手册，例如:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要想打开git config命令的帮助手册")]),t._v("\ngit help config\ngit config -h\n")])])]),a("h2",{attrs:{id:"获取git仓库的两种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取git仓库的两种方式"}},[t._v("#")]),t._v(" 获取Git仓库的两种方式")]),t._v(" "),a("p",[t._v("将尚未进行版本控制的本地目录转换为Git仓库")]),t._v(" "),a("p",[t._v("从其它服务器克隆一个已存在的 Git仓库\n以上两种方式都能够在自己的电脑上得到一个可用的 Git 仓库")]),t._v(" "),a("h2",{attrs:{id:"在现有目录中初始化仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在现有目录中初始化仓库"}},[t._v("#")]),t._v(" 在现有目录中初始化仓库")]),t._v(" "),a("p",[t._v('如果自己有一个尚未进行版本控制的项目目录，想要用Git 来控制它，需要执行如下两个步骤:在项目目录中，通过鼠标右键打开“Git Bash"\n执行git init命令将当前的目录转化为Git仓库\ngit init命令会创建一个名为.git的隐藏目录，这个.git目录就是当前项目的Git仓库，里面包含了初始的必要文件，这些文件是Git仓库的必要组成部分。')]),t._v(" "),a("h2",{attrs:{id:"工作区中文件的4种状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作区中文件的4种状态"}},[t._v("#")]),t._v(" 工作区中文件的4种状态")]),t._v(" "),a("p",[t._v("工作区中的每一个文件可能有4种状态，这四种状态共分为两大类，如图所示")]),t._v(" "),a("p",[a("img",{attrs:{src:s(279),alt:"git"}})]),t._v(" "),a("p",[t._v("Git 操作的终极结果:让工作区中的文件都处于“未修改”的状态。")]),t._v(" "),a("h2",{attrs:{id:"检查文件的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查文件的状态"}},[t._v("#")]),t._v(" 检查文件的状态")]),t._v(" "),a("p",[t._v("可以使用"),a("code",[t._v("git status")]),t._v("命令查看文件处于什么状态，例如:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" what will be committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Desktop.ini\n        index.html\n\nnothing added to commit but untracked files present "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在状态报告中可以看到新建的index.html文件出现在Untracked files(未跟踪的文件）下面。\n未跟踪的文件意味着Git在之前的快照（提交）中没有这些文件;Git不会自动将之纳入跟踪范围，除非明确地告诉它“我需要使用Git跟踪管理该文件”。")]),t._v(" "),a("h2",{attrs:{id:"以精简的方式显示文件状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以精简的方式显示文件状态"}},[t._v("#")]),t._v(" 以精简的方式显示文件状态")]),t._v(" "),a("p",[t._v("使用git status 输出的状态报告很详细，但有些繁琐。如果希望以精简的方式显示文件的状态，可以使用如下两条完全等价的命令，其中-s是--short的简写形式:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以精简的方式显示文件状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--short")]),t._v("\n")])])]),a("p",[t._v("未跟踪文件前面有红色的??标记，例如:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("?? Desktop.ini\n?? index.html\n")])])]),a("h2",{attrs:{id:"跟踪新文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跟踪新文件"}},[t._v("#")]),t._v(" 跟踪新文件")]),t._v(" "),a("p",[t._v("使用命令git add开始跟踪一个文件。所以，要跟踪index.html文件，运行如下的命令即可:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" index.html\n")])])]),a("p",[t._v("此时再运行git status命令，会看到index.html文件在Changes to be committed这行的下面，说明已被跟踪，并处于暂存状态:")]),t._v(" "),a("p",[t._v("以精简的方式显示文件的状态:\n"),a("strong",[t._v("新添加到暂存区中的文件前面有绿色的A标记")])]),t._v(" "),a("div",{staticClass:"language-bas extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("A  index.html\n?? Desktop.ini\n")])])]),a("h2",{attrs:{id:"提交更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交更新"}},[t._v("#")]),t._v(" 提交更新")]),t._v(" "),a("p",[t._v("现在暂存区中有一个index.html文件等待被提交到Git 仓库中进行保存。可以执行git commit 命令进行提交，其中-m选项后面是本次的提交消息，用来对提交的内容做进一步的描述:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"添加index.html文件"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" aa9e8ec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 添加index.html文件\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" deletions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" index.html\n")])])]),a("p",[t._v("提交成功之后，会显示如下的信息:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"添加index.html文件"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" aa9e8ec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 添加index.html文件\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" deletions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" index.html\n")])])]),a("p",[t._v("提交成功之后，再次检查文件的状态，得到提示如下:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nnothing to commit, working tree clean\n")])])]),a("p",[t._v("证明工作区中所有的文件都处于“未修改”的状态，没有任何文件需要被提交。")]),t._v(" "),a("h2",{attrs:{id:"对已提交的文件进行修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对已提交的文件进行修改"}},[t._v("#")]),t._v(" 对已提交的文件进行修改")]),t._v(" "),a("p",[t._v("目前，index.html文件已经被Git跟踪，并且工作区和Git仓库中的index.html文件内容保持一致。当我们修改了工作区中 index.html的内容之后，再次运行git status和 git status -s命令，会看到如下的内容:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nChanges not staged "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" commit:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git restore <file>..."')]),t._v(" to discard changes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" working directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        modified:   index.html\n\nno changes added to commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("文件 index.html出现在Changes not staged for commit这行下面，说明已跟踪文件的内容发生了变化,但还没有放到暂存区。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v("\n M index.html\n")])])]),a("p",[t._v("注意:"),a("strong",[t._v("修改过的、没有放入暂存区的文件前面有红色的M标记")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"暂存已修改的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂存已修改的文件"}},[t._v("#")]),t._v(" 暂存已修改的文件")]),t._v(" "),a("p",[t._v("目前，工作区中的index.html文件已被修改，如果要暂存这次修改，需要再次运行git add 命令，这个命令是个多功能的命令，主要有如下3个功效:\n可以用它开始跟踪新文件")]),t._v(" "),a("p",[t._v("把已跟踪的、且已修改的文件放到暂存区")]),t._v(" "),a("p",[t._v("把有冲突的文件标记为已解决状态")]),t._v(" "),a("h2",{attrs:{id:"提交已暂存的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交已暂存的文件"}},[t._v("#")]),t._v(" 提交已暂存的文件")]),t._v(" "),a("p",[t._v('再次运行git commit -m "提交消息"命令，即可将暂存区中记录的index.html的快照，提交到Git仓库中进行保存:')]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index已修改"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master d730cf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" index已修改\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" deletions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n rewrite index.html "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("检查工作区中文件状态")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\nOn branch master\nnothing to commit, working tree clean\n")])])]),a("h2",{attrs:{id:"撤销对文件的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销对文件的修改"}},[t._v("#")]),t._v(" 撤销对文件的修改")]),t._v(" "),a("p",[t._v("撤销对文件的修改指的是:把对工作区中对应文件的修改，还原成Git仓库中所保存的版本。操作的结果:所有的修改会丢失，且无法恢复!危险性比较高，请慎重操作!")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("撤销对index.html文件的修改\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout  -- index.html\n")])])]),a("p",[a("code",[t._v("撤销操作的本质:用Git仓库中保存的文件，覆盖工作区中指定的文件。")])]),t._v(" "),a("h2",{attrs:{id:"向暂存区中一次性添加多个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向暂存区中一次性添加多个文件"}},[t._v("#")]),t._v(" 向暂存区中一次性添加多个文件")]),t._v(" "),a("p",[t._v("如果需要被暂存的文件个数比较多，可以使用如下的命令，一次性将所有的新增和修改过的文件加入暂存区:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("今后在项目开发中，会经常使用这个命令，将新增和修改过后的文件加入暂存区。")]),t._v(" "),a("h2",{attrs:{id:"取消暂存的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取消暂存的文件"}},[t._v("#")]),t._v(" 取消暂存的文件")]),t._v(" "),a("p",[t._v("如果需要从暂存区中移除对应的文件，可以使用如下的命令:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset  HEAD 需要移除的文件名称\n")])])]),a("p",[t._v("移除单个 文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD index.css\n")])])]),a("p",[t._v("移除所有文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("h2",{attrs:{id:"跳过使用暂存区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳过使用暂存区域"}},[t._v("#")]),t._v(" 跳过使用暂存区域")]),t._v(" "),a("p",[t._v("Git标准的工作流程是"),a("code",[t._v("工作区")]),t._v("→"),a("code",[t._v("暂存区")]),t._v("→"),a("code",[t._v("Git仓库")]),t._v("，但有时候这么做略显繁琐，此时可以跳过暂存区，直接将工作区中的修改提交到Git仓库，这时候Git工作的流程简化为了"),a("code",[t._v("工作区")]),t._v("→"),a("code",[t._v("Git 仓库")]),t._v("。")]),t._v(" "),a("p",[t._v("Git提供了一个跳过使用暂存区域的方式，只要在提交的时候，给"),a("code",[t._v("git commit")]),t._v("加上-a选项，Git就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过git add步骤:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"描述消息"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"修改了index.css"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master 3c22b30"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 修改了index.css\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"移除文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除文件"}},[t._v("#")]),t._v(" 移除文件")]),t._v(" "),a("p",[t._v("从Git仓库中移除文件的方式有两种:\n从Git仓库和工作区中同时移除对应的文件\n只从Git仓库中移除指定的文件，但保留工作区中对应的文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从 Git仓库和工作区中同时移除index.js文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" index.js\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只从Git仓库中移除index.css，但保留工作区中的index.csS 文件4 git rm --cached index.css")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v(" index.css\n")])])]),a("h2",{attrs:{id:"忽略文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[t._v("#")]),t._v(" 忽略文件")]),t._v(" "),a("p",[t._v("一般我们总会有些文件无需纳入Git的管理，也不希望它们总出现在未跟踪文件列表。在这种情况下，我们可以创建一个名为.gitignore 的配置文件，列出要忽略的文件的匹配模式。\n文件."),a("code",[t._v("gitignore")]),t._v("的格式规范如下:\n以"),a("code",[t._v("#开头")]),t._v("的是注释\n以"),a("code",[t._v("/结尾")]),t._v("的是目录以/开头防止递归\n以"),a("code",[t._v("!开头")]),t._v("表示取反\n可以使用"),a("code",[t._v("glob模式")]),t._v("进行文件和文件夹的匹配(glob指简化了的正则表达式)")]),t._v(" "),a("h2",{attrs:{id:"glob模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#glob模式"}},[t._v("#")]),t._v(" glob模式")]),t._v(" "),a("p",[t._v("所谓的glob模式是指简化了的正则表达式:星号*匹配零个或多个任意字符\n[abc]匹配任何一个列在方括号中的字符（此案例匹配一个a或匹配一个b或匹配一个c)问号﹖只匹配一个任意字符\n在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如[0-9]表示匹配所有0到9的数字)\n两个星号"),a("strong",[t._v("表示匹配任意中间目录（比如a/")]),t._v("/z可以匹配 a/z 、 a/b/z或 a/b/c/z等)")]),t._v(" "),a("h2",{attrs:{id:"gitignore文件的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitignore文件的例子"}},[t._v("#")]),t._v(" .gitignore文件的例子")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略所有的 .a文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" *.a\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#但跟踪所有的lib.a，即便你在前面忽略了.a 文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lib.a\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只忽略当前目录下的 TODO文件，而不忽略subdir/TODO")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" TODo\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略任何目录下名为build的文件夹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" build/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略doc/notes.txt，但不忽略doc/server / arch.txt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" doc/*.txt\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略 doc/目录及其所有子目录下的.pdf文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" doc/**/*.pdf\n")])])]),a("h2",{attrs:{id:"查看提交历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看提交历史"}},[t._v("#")]),t._v(" 查看提交历史")]),t._v(" "),a("p",[t._v("如果希望回顾项目的提交历史，可以使用git log这个简单且有效的命令。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\ncommit 079eb471c1aef0cebb6db020d610591e1215a7a1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: maimai977977 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("949022711")]),t._v("@qq.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(":06:44 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" +0800\n\n    创建了git忽略文件\n\ncommit f479fb803cc5b2cfc5ba92398e6ab81b69a892e3\nAuthor: maimai977977 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("949022711")]),t._v("@qq.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":56:15 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" +0800\n\n    移除了index.js 和index.css\n\ncommit 3c22b30861f037825633d3ad731cba891550992f\nAuthor: maimai977977 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("949022711")]),t._v("@qq.com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":50:44 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" +0800\n\n    修改了index.css\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按时间先后顺序列出所有的提交历史，最近的提交排在最上面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只展示最新的两条提交历史，数字可以按需进行填写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在一行上展示最近两条提交历史的信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在一行上展示最近两条提交历史的信息，并自定义输出的格式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ‰h提交的简写哈希值‰an作者名字%ar作者修订日期，按多久以前的方式显示  %s提交说明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%h | %an | %ar |%s"')]),t._v("\n")])])]),a("h2",{attrs:{id:"回退到指定的版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回退到指定的版本"}},[t._v("#")]),t._v(" 回退到指定的版本")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在一行上展示所有的提交历史")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用git reset --hard命令，根据指定的提交ID回退到指定版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CommitID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在旧版本中使用git reflog --pretty=oneline命令，查看命令操作的历史")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#再次根据最新的提交ID，跳转到最新的版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CommitID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n079eb471c1aef0cebb6db020d610591e1215a7a1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 创建了git忽略文件\nf479fb803cc5b2cfc5ba92398e6ab81b69a892e3 移除了index.js 和index.css\n3c22b30861f037825633d3ad731cba891550992f 修改了index.css\nb3641a6008df31cd4594cd8f2e3a92656c2e9318 新增idnex.js和index.css修改index'.html\nd730cf2c432a8021fa579a9e88100885016613d6 index已修改\n87222da682547f7ef8b1061ee391cc4a16dc456d 添加desktop\naa9e8ecaa384c352ce18c73debbf4bf721ba81ad 添加index.html文件\n")])])]),a("p",[t._v("回退第一个版本")]),t._v(" "),a("div",{staticClass:"language-ba extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git reset --hard aa9e8ecaa384c352ce18c73debbf4bf721ba81ad\nHEAD is now at aa9e8ec 添加index.html文件\n")])])]),a("p",[t._v("查看命令操作历史")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\naa9e8ec "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": reset: moving to aa9e8ecaa384c352ce18c73debbf4bf721ba81ad\n079eb47 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: 创建了git忽略文件\nf479fb8 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: 移除了index.js 和index.css\n3c22b30 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: 修改了index.css\nb3641a6 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: 新增idnex.js和index.css修改index'.html\nd730cf2 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: index已修改\n87222da HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: 添加desktop\naa9e8ec "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": 添加index.html文件\n")])])]),a("p",[t._v("再次提交跳转到最新的版本")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" 079eb47\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);